name: CI/CD

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Pre-commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
      - name: Install project and dependencies
        run: poetry install --only dev --sync
      - name: Analysing the code with pre-commit
        run: |
          poetry run pre-commit run --all-files

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.5

      - name: Append DigitalOcean credentials to variables.tf
        run: echo 'variable "do_token" { default = "${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" }' >> infra-terraform/variables.tf

      - name: Terraform init
        run: cd infra-terraform &&
              terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID_DO }}" -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY_D0 }}"
      - name: Terraform apply
        run: cd infra-terraform && terraform apply -auto-approve

      - name: Extract cluster name
        id: extract_cluster_name
        working-directory: infra-terraform
        run: |
          terraform show | grep name | awk -F' = ' '{print $2}' | head -n1 > cluster_name.txt

      - name: Set output
        run: echo "cluster_name=$(cat infra-terraform/cluster_name.txt)" >> $GITHUB_ENV

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: fil404/model-deploy-image
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Kubernetes
    needs: [push_to_registry, terraform_apply]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: |
          cluster_name="${{ env.cluster_name }}"
          doctl kubernetes cluster kubeconfig save $cluster_name

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f app-deployment.yaml && kubectl apply -f app-service.yaml
